<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="accom">
<!-- 페이지카운트 -->
<select id="getCnt" resultType="integer" parameterType="hashmap">
SELECT COUNT (*) AS CNT
FROM
(SELECT T.BLTNBOARD_NO,POST_NO,MEMBER_NO,TITLE,CONTENTS,IMG_FILE,HIT,REG_DT
FROM BOARD_TYPE T INNER JOIN BULLETIN_BOARD B
ON T.BLTNBOARD_NO = B.BLTNBOARD_NO
WHERE B.DEL_DT IS NULL
AND T.BLTNBOARD_NO =2)G INNER JOIN MEMBER M
ON G.MEMBER_NO=M.MEMBER_NO
INNER JOIN BOARD_COURSE B
        ON G.POST_NO=B.POST_NO
        INNER JOIN COURSE C
       ON B.COURSE_NO= C.COURSE_NO
<!-- 검색어가 널이 또는 '' 가 아니라면 -->
<choose>
	<when test="searchTxt == null and searchTxt ==''">
		<choose>
			<when test="searchGbn eq 0">				
			</when>
			<when test="searchGbn eq 1">
				AND C.COURSE_NO='1'
			</when>
			<when test="searchGbn eq 2">
				AND C.COURSE_NO='1'
			</when>
			<when test="searchGbn eq 3">
				AND C.COURSE_NO='3'
			</when>
			<when test="searchGbn eq 4">
				AND C.COURSE_NO='4'
			</when>
			<when test="searchGbn eq 5">
				AND C.COURSE_NO='5'
			</when>
			<when test="searchGbn eq 6">
				AND C.COURSE_NO='6'
			</when>
			<when test="searchGbn eq 7">
				AND C.COURSE_NO='7'
			</when>
			<when test="searchGbn eq 8">
				AND C.COURSE_NO='8'
			</when>
		</choose>
	</when>
	<otherwise>
		<choose>
	<when test="courseGbn eq 0">
			<choose>
					<!-- 구분이 제목일때  #{serchTxt} 들어가묜-->
					<when test="searchGbn eq 0">
					AND TITLE LIKE '%' || #{searchTxt} || '%'
					</when>
					<when test="searchGbn eq 1">
					AND CONTENTS LIKE '%'|| #{searchTxt}||'%'
					</when>
					<when test="searchGbn eq 2">
					AND NM LIKE '%'|| #{searchTxt} ||'%'
					</when>

				</choose>	
			</when>
			<when test="courseGbn eq 1">
			AND C.COURSE_NO='1'
			<choose>
					<!-- 구분이 제목일때  #{serchTxt} 들어가묜-->
					<when test="searchGbn eq 0">
					AND TITLE LIKE '%' || #{searchTxt} || '%'
					</when>
					<when test="searchGbn eq 1">
					AND CONTENTS LIKE '%'|| #{searchTxt}||'%'
					</when>
					<when test="searchGbn eq 2">
					AND NM LIKE '%'|| #{searchTxt} ||'%'
					</when>

				</choose>	
			</when>
			<when test="courseGbn eq 2">
			AND C.COURSE_NO='2'
			<choose>
					<!-- 구분이 제목일때  #{serchTxt} 들어가묜-->
					<when test="searchGbn eq 0">
					AND TITLE LIKE '%' || #{searchTxt} || '%'
					</when>
					<when test="searchGbn eq 1">
					AND CONTENTS LIKE '%'|| #{searchTxt}||'%'
					</when>
					<when test="searchGbn eq 2">
					AND NM LIKE '%'|| #{searchTxt} ||'%'
					</when>	
				</choose>	
			</when>
			<when test="courseGbn eq 3">
			AND C.COURSE_NO='3'
			<choose>
					<!-- 구분이 제목일때  #{serchTxt} 들어가묜-->
					<when test="searchGbn eq 0">
					AND TITLE LIKE '%' || #{searchTxt} || '%'
					</when>
					<when test="searchGbn eq 1">
					AND CONTENTS LIKE '%'|| #{searchTxt}||'%'
					</when>
					<when test="searchGbn eq 2">
					AND NM LIKE '%'|| #{searchTxt} ||'%'
					</when>
				</choose>	
		</when>
		<when test="courseGbn eq 4">
		AND C.COURSE_NO='4'
			<choose>
					<!-- 구분이 제목일때  #{serchTxt} 들어가묜-->
					<when test="searchGbn eq 0">
					AND TITLE LIKE '%' || #{searchTxt} || '%'
					</when>
					<when test="searchGbn eq 1">
					AND CONTENTS LIKE '%'|| #{searchTxt}||'%'
					</when>
					<when test="searchGbn eq 2">
					AND NM LIKE '%'|| #{searchTxt} ||'%'
					</when>
				</choose>	
			</when>
			<when test="courseGbn eq 5">
			AND C.COURSE_NO='5'
			<choose>
					<!-- 구분이 제목일때  #{serchTxt} 들어가묜-->
					<when test="searchGbn eq 0">
					AND TITLE LIKE '%' || #{searchTxt} || '%'
					</when>
					<when test="searchGbn eq 1">
					AND CONTENTS LIKE '%'|| #{searchTxt}||'%'
					</when>
					<when test="searchGbn eq 2">
					AND NM LIKE '%'|| #{searchTxt} ||'%'
					</when>
				</choose>	
			</when>
			<when test="courseGbn eq 6">
			AND C.COURSE_NO='6'
			<choose>
					<!-- 구분이 제목일때  #{serchTxt} 들어가묜-->
					<when test="searchGbn eq 0">
					AND TITLE LIKE '%' || #{searchTxt} || '%'
					</when>
					<when test="searchGbn eq 1">
					AND CONTENTS LIKE '%'|| #{searchTxt}||'%'
					</when>
					<when test="searchGbn eq 2">
					AND NM LIKE '%'|| #{searchTxt} ||'%'
					</when>
				</choose>	
			</when>
			<when test="courseGbn eq 7">
			AND C.COURSE_NO='7'
			<choose>
					<!-- 구분이 제목일때  #{serchTxt} 들어가묜-->
					<when test="searchGbn eq 0">
					AND TITLE LIKE '%' || #{searchTxt} || '%'
					</when>
					<when test="searchGbn eq 1">
					AND CONTENTS LIKE '%'|| #{searchTxt}||'%'
					</when>
					<when test="searchGbn eq 2">
					AND NM LIKE '%'|| #{searchTxt} ||'%'
					</when>
				</choose>	
		</when>
			<when test="courseGbn eq 8">
			AND C.COURSE_NO='8'
			<choose>
					<!-- 구분이 제목일때  #{serchTxt} 들어가묜-->
					<when test="searchGbn eq 0">
					AND TITLE LIKE '%' || #{searchTxt} || '%'
					</when>
					<when test="searchGbn eq 1">
					AND CONTENTS LIKE '%'|| #{searchTxt}||'%'
					</when>
					<when test="searchGbn eq 2">
					AND NM LIKE '%'|| #{searchTxt} ||'%'
					</when>
				</choose>	
			</when>		
		</choose>
	</otherwise>	
</choose>
</select>
<!-- 목록 -->
<select id="getAccomList" parameterType="hashmap" resultType="hashmap">	
SELECT F.POST_NO,F.NM,F.TITLE,F.HIT,F.DT,F.CONTENTS,F.IMG_FILE,F.COURSE_NO,F.COURSE_NM,NVL(F.CNT,0)AS GOOD,ROW_NUMBER() OVER(ORDER BY F.POST_NO DESC) AS RNUM ,NVL(CNT,0)AS CNT
FROM(SELECT G.POST_NO,M.NM,G.TITLE,G.HIT,G.DT,G.CONTENTS,G.RNUM,G.IMG_FILE,B.COURSE_NO,C.COURSE_NM,CNT
     FROM (SELECT POST_NO,TITLE,HIT,CONTENTS,MEMBER_NO,B.IMG_FILE,
                CASE WHEN TO_CHAR(B.REG_DT, 'YY.MM.DD') = TO_CHAR(SYSDATE,'YY.MM.DD')
            	THEN TO_CHAR(B.REG_DT, 'HH24:MI')
            	ELSE TO_CHAR(B.REG_DT,'YY.MM.DD')
       			END AS DT,
                ROW_NUMBER() OVER(ORDER BY B.POST_NO DESC) AS RNUM  
                FROM BOARD_TYPE T INNER JOIN BULLETIN_BOARD B
                ON T.BLTNBOARD_NO = B.BLTNBOARD_NO
                WHERE B.DEL_DT IS NULL
                AND T.BLTNBOARD_NO =2 )G  
        INNER JOIN MEMBER M 
        ON G.MEMBER_NO = M.MEMBER_NO
        INNER JOIN BOARD_COURSE B
        ON G.POST_NO=B.POST_NO
        INNER JOIN COURSE C
       ON B.COURSE_NO= C.COURSE_NO 
      LEFT OUTER JOIN 
      (SELECT COUNT(*)AS CNT,POST_NO
                        FROM COMMENTS
                        WHERE DEL_DT IS NULL
                        GROUP BY POST_NO)
                     CC ON G.POST_NO=CC.POST_NO
                     WHERE 1=1
      )F
       WHERE F.RNUM BETWEEN #{start} AND #{end}
       <choose>
	<when test="searchTxt == null and searchTxt ==''">
		<choose>
			<when test="searchGbn eq 0">				
			</when>
			<when test="searchGbn eq 1">
				AND COURSE_NO='1'
			</when>
			<when test="searchGbn eq 2">
				AND COURSE_NO='1'
			</when>
			<when test="searchGbn eq 3">
				AND COURSE_NO='3'
			</when>
			<when test="searchGbn eq 4">
				AND COURSE_NO='4'
			</when>
			<when test="searchGbn eq 5">
				AND COURSE_NO='5'
			</when>
			<when test="searchGbn eq 6">
				AND COURSE_NO='6'
			</when>
			<when test="searchGbn eq 7">
				AND COURSE_NO='7'
			</when>
			<when test="searchGbn eq 8">
				AND COURSE_NO='8'
			</when>
		</choose>
	</when>
	<otherwise>
		<choose>
	<when test="courseGbn eq 0">
			<choose>
					<!-- 구분이 제목일때  #{serchTxt} 들어가묜-->
					<when test="searchGbn eq 0">
					AND TITLE LIKE '%' || #{searchTxt} || '%'
					</when>
					<when test="searchGbn eq 1">
					AND CONTENTS LIKE '%'|| #{searchTxt}||'%'
					</when>
					<when test="searchGbn eq 2">
					AND NM LIKE '%'|| #{searchTxt} ||'%'
					</when>

				</choose>	
			</when>
			<when test="courseGbn eq 1">
			AND COURSE_NO='1'
			<choose>
					<!-- 구분이 제목일때  #{serchTxt} 들어가묜-->
					<when test="searchGbn eq 0">
					AND TITLE LIKE '%' || #{searchTxt} || '%'
					</when>
					<when test="searchGbn eq 1">
					AND CONTENTS LIKE '%'|| #{searchTxt}||'%'
					</when>
					<when test="searchGbn eq 2">
					AND NM LIKE '%'|| #{searchTxt} ||'%'
					</when>

				</choose>	
			</when>
			<when test="courseGbn eq 2">
			AND COURSE_NO='2'
			<choose>
					<!-- 구분이 제목일때  #{serchTxt} 들어가묜-->
					<when test="searchGbn eq 0">
					AND TITLE LIKE '%' || #{searchTxt} || '%'
					</when>
					<when test="searchGbn eq 1">
					AND CONTENTS LIKE '%'|| #{searchTxt}||'%'
					</when>
					<when test="searchGbn eq 2">
					AND NM LIKE '%'|| #{searchTxt} ||'%'
					</when>	
				</choose>	
			</when>
			<when test="courseGbn eq 3">
			AND COURSE_NO='3'
			<choose>
					<!-- 구분이 제목일때  #{serchTxt} 들어가묜-->
					<when test="searchGbn eq 0">
					AND TITLE LIKE '%' || #{searchTxt} || '%'
					</when>
					<when test="searchGbn eq 1">
					AND CONTENTS LIKE '%'|| #{searchTxt}||'%'
					</when>
					<when test="searchGbn eq 2">
					AND NM LIKE '%'|| #{searchTxt} ||'%'
					</when>
				</choose>	
		</when>
		<when test="courseGbn eq 4">
		AND COURSE_NO='4'
			<choose>
					<!-- 구분이 제목일때  #{serchTxt} 들어가묜-->
					<when test="searchGbn eq 0">
					AND TITLE LIKE '%' || #{searchTxt} || '%'
					</when>
					<when test="searchGbn eq 1">
					AND CONTENTS LIKE '%'|| #{searchTxt}||'%'
					</when>
					<when test="searchGbn eq 2">
					AND NM LIKE '%'|| #{searchTxt} ||'%'
					</when>
				</choose>	
			</when>
			<when test="courseGbn eq 5">
			AND COURSE_NO='5'
			<choose>
					<!-- 구분이 제목일때  #{serchTxt} 들어가묜-->
					<when test="searchGbn eq 0">
					AND TITLE LIKE '%' || #{searchTxt} || '%'
					</when>
					<when test="searchGbn eq 1">
					AND CONTENTS LIKE '%'|| #{searchTxt}||'%'
					</when>
					<when test="searchGbn eq 2">
					AND NM LIKE '%'|| #{searchTxt} ||'%'
					</when>
				</choose>	
			</when>
			<when test="courseGbn eq 6">
			AND COURSE_NO='6'
			<choose>
					<!-- 구분이 제목일때  #{serchTxt} 들어가묜-->
					<when test="searchGbn eq 0">
					AND TITLE LIKE '%' || #{searchTxt} || '%'
					</when>
					<when test="searchGbn eq 1">
					AND CONTENTS LIKE '%'|| #{searchTxt}||'%'
					</when>
					<when test="searchGbn eq 2">
					AND NM LIKE '%'|| #{searchTxt} ||'%'
					</when>
				</choose>	
			</when>
			<when test="courseGbn eq 7">
			AND COURSE_NO='7'
			<choose>
					<!-- 구분이 제목일때  #{serchTxt} 들어가묜-->
					<when test="searchGbn eq 0">
					AND TITLE LIKE '%' || #{searchTxt} || '%'
					</when>
					<when test="searchGbn eq 1">
					AND CONTENTS LIKE '%'|| #{searchTxt}||'%'
					</when>
					<when test="searchGbn eq 2">
					AND NM LIKE '%'|| #{searchTxt} ||'%'
					</when>
				</choose>	
		</when>
			<when test="courseGbn eq 8">
			AND COURSE_NO='8'
			<choose>
					<!-- 구분이 제목일때  #{serchTxt} 들어가묜-->
					<when test="searchGbn eq 0">
					AND TITLE LIKE '%' || #{searchTxt} || '%'
					</when>
					<when test="searchGbn eq 1">
					AND CONTENTS LIKE '%'|| #{searchTxt}||'%'
					</when>
					<when test="searchGbn eq 2">
					AND NM LIKE '%'|| #{searchTxt} ||'%'
					</when>
				</choose>	
			</when>		
		</choose>
	</otherwise>	
</choose>
</select>

<!-- 게시글등록 -->
<insert id="insert" parameterType="hashmap">
INSERT ALL
INTO BOARD_COURSE(POST_NO,COURSE_NO) VALUES (COMMUNITY_SEQ.NEXTVAL,#{courseNo})
INTO BULLETIN_BOARD(POST_NO,BLTNBOARD_NO,MEMBER_NO,TITLE,CONTENTS,IMG_FILE) VALUES(COMMUNITY_SEQ.NEXTVAL,2,#{memberNo},#{title},#{contents},#{imgFile, jdbcType = VARCHAR})
INTO BOARD_ACCOMPANY(POST_NO, ACCOMPANY_DT, PUBLIC_GENDER, PUBLIC_AGE) VALUES(COMMUNITY_SEQ.NEXTVAL, #{accompanyDt}, #{publicGender}, #{publicAge})
SELECT * FROM DUAL
</insert>

<!-- 게시글삭제 -->
<update id="delete" parameterType="hashmap">
UPDATE BULLETIN_BOARD SET DEL_DT = SYSDATE
WHERE POST_NO= #{no}
</update>

<!-- 게시글수정 -->
<update id="update"  parameterType="hashmap">
BEGIN
UPDATE BULLETIN_BOARD SET TITLE = #{title}, CONTENTS = #{contents}, IMG_FILE = #{imgFile, jdbcType = VARCHAR}
WHERE POST_NO = #{no};
UPDATE BOARD_COURSE SET COURSE_NO = #{courseNo}
WHERE POST_NO = #{no};
UPDATE BOARD_ACCOMPANY SET  ACCOMPANY_DT = #{accompanyDt}, PUBLIC_GENDER= #{publicGender}, PUBLIC_AGE= #{publicAge}
WHERE POST_NO = #{no};
END;
</update>

<!-- 조회수 -->
<update id="updateTHit" parameterType="hashmap">
UPDATE BULLETIN_BOARD SET HIT = HIT+1
WHERE POST_NO= #{no} 
<if test="sMemNo != null and sMemNo != ''">
	AND MEMBER_NO != #{sMemNo}
</if> 
</update>

<!-- 상세보기 -->
<select id="getAC" parameterType="hashmap" resultType="hashmap">
SELECT BC.POST_NO,BC.COURSE_NO,C.COURSE_NM,BB.BLTNBOARD_NO,M.MEMBER_NO,BB.TITLE,BB.CONTENTS,
       BB.IMG_FILE AS B_FILE,BB.HIT, CASE WHEN TO_CHAR(BB.REG_DT, 'YYYY-MM-DD') = TO_CHAR(SYSDATE,'YYYY-MM-DD')
               THEN TO_CHAR(BB.REG_DT, 'HH24:MI')
               ELSE TO_CHAR(BB.REG_DT,'YY.MM.DD')
               END AS DT, M.NM, BA.PUBLIC_GENDER, BA.PUBLIC_AGE,
               TRUNC(MONTHS_BETWEEN(SYSDATE, M.DATE_BIRTH)/12) AS AGE,
               TO_CHAR(BA.ACCOMPANY_DT, 'YYYY-MM-DD') AS ACCOMPANY_DT, M.RELIABILITY, M.GENDER
FROM COURSE C INNER JOIN BOARD_COURSE BC 
                      ON C.COURSE_NO=BC.COURSE_NO
              INNER JOIN BULLETIN_BOARD BB 
                      ON BC.POST_NO=BB.POST_NO  
              INNER JOIN MEMBER M 
                      ON BB.MEMBER_NO=M.MEMBER_NO
              INNER JOIN BOARD_ACCOMPANY BA
                      ON BA.POST_NO = BC.POST_NO
WHERE BB.POST_NO= #{no}
</select>

<!-- 댓글 카운트 -->
<select id="getCCnt" resultType="integer" parameterType="hashmap">
SELECT COUNT(*)AS CNT
FROM COMMENTS C INNER JOIN MEMBER M
     ON C.MEMBER_NO=M.MEMBER_NO
     AND C.DEL_DT IS NULL
     AND M.DEL_DT IS NULL
     WHERE POST_NO=#{no}
</select>

<!-- 댓글리스트 -->
<select id="getCList"  parameterType="hashmap" resultType="hashmap">
 SELECT F.COMMENT_NO,F.POST_NO,F.CCONTENTS,F.CREG_DT,F.CMEMBER_NO,F.CNM,F.P_IMG,F.RCNUM
FROM (SELECT COMMENT_NO,POST_NO,C.CONTENTS AS CCONTENTS,
     CASE WHEN TO_CHAR(C.REG_DT, 'YY.MM.DD') = TO_CHAR(SYSDATE,'YY.MM.DD')
				THEN TO_CHAR(C.REG_DT, 'HH24:MI')
				ELSE TO_CHAR(C.REG_DT, 'YY.MM.DD')
                END AS CREG_DT,
     M.MEMBER_NO AS CMEMBER_NO,M.NM AS CNM,M.IMG_FILE AS P_IMG,     
     ROW_NUMBER() OVER(ORDER BY COMMENT_NO DESC) AS RCNUM
FROM COMMENTS C INNER JOIN MEMBER M
     ON C.MEMBER_NO=M.MEMBER_NO
     AND C.DEL_DT IS NULL
     AND M.DEL_DT IS NULL
     WHERE POST_NO=#{no})F
   WHERE F.RCNUM BETWEEN #{start} AND #{end}
</select>
<!-- 댓글추가 -->
<insert id="insertC" parameterType="hashmap">		
INSERT INTO COMMENTS(COMMENT_NO,POST_NO,MEMBER_NO,CONTENTS,REG_DT)
VALUES (COMMENT_SEQ.NEXTVAL,#{no},#{cmemberNo},#{ccon},SYSDATE)
</insert>

<!-- 댓글수정 -->
<update id="updateC" parameterType="hashmap">
UPDATE COMMENTS SET CONTENTS = #{ccon}
WHERE COMMENT_NO = #{commentNo}
</update>

<!-- 댓글삭제 -->
<delete id="deleteC" parameterType="hashmap">
UPDATE COMMENTS SET DEL_DT = SYSDATE
WHERE COMMENT_NO = #{commentNo}
</delete>
<!-- 동행 신청자 목록 -->
<select id="getApplyMemList" resultType="hashmap" parameterType="hashmap">
SELECT M.NM
FROM ACCOMPANY_APPLY AA INNER JOIN BOARD_ACCOMPANY BA
                                ON AA.POST_NO = BA.POST_NO
                        INNER JOIN MEMBER M
                                ON AA.MEMBER_NO = M.MEMBER_NO
                                AND M.DEL_DT IS NULL
WHERE BA.POST_NO = #{no}
ORDER BY AA.REG_DT ASC
</select>
<!-- 동행 신청자 수 -->
<select id="getApplyCnt" resultType="hashmap" parameterType="hashmap">
SELECT COUNT(*) AS CNT
FROM ACCOMPANY_APPLY AA INNER JOIN BOARD_ACCOMPANY BA
                                ON AA.POST_NO = BA.POST_NO
                        INNER JOIN MEMBER M
                                ON AA.MEMBER_NO = M.MEMBER_NO
                                AND M.DEL_DT IS NULL
WHERE BA.POST_NO = #{no}
</select>
<!-- 동행 신청 -->
<insert id="insertApply" parameterType="hashmap">		
<if test="sMemNo != memberNo">
INSERT ALL
INTO ACCOMPANY_APPLY(POST_NO, MEMBER_NO) VALUES (#{no},#{cmemberNo})
INTO NOTIFICATION(NOTIFICATION_NO ,POST_NO, APPLICANT_NO, MEMBER_NO) 
VALUES (NOTIFICATION_SEQ.NEXTVAL, #{no},#{sMemNo}, #{memberNo})
</if>
SELECT * FROM DUAL
</insert>
<!-- 동행신청 확인 -->
<select id="applyCheck" resultType="hashmap" parameterType="hashmap">
SELECT *
FROM ACCOMPANY_APPLY
WHERE POST_NO = #{no}
AND MEMBER_NO = #{sMemNo}                          
</select>
<!-- 동행신청 취소 -->
<delete id="deleteApply" parameterType="hashmap">
DELETE FROM ACCOMPANY_APPLY
WHERE POST_NO = #{no}
AND MEMBER_NO = #{sMemNo}
</delete>


<!-- 댓글 신고하기 -->
<insert id="commentReport" parameterType="hashmap">
MERGE INTO REPORT <!-- 리포트 테이블 -->
USING DUAL         <!-- 가상어쩌구 -->
    ON (REPORT_MEMBER_NO = #{sMemNo} AND COMMENT_NO = #{commentNo}) <!-- 리포트 테이블에 ㅇon(~~)이 조건이 있으면 -->
WHEN NOT MATCHED THEN <!-- 실행 안해~! -->
    INSERT (REPORT_NO, REPORT_TYPE_NO, REPORT_MEMBER_NO, COMMENT_NO, OTHER, TARGET_MN)<!-- 이구문들을... -->
    VALUES(REPORT_SEQ.NEXTVAL, #{reportTypeNo}, #{sMemNo}, #{commentNo}, #{reportContents, jdbcType = VARCHAR}, #{reportNm})
</insert>

<!-- 게시글 신고하기 -->
<insert id="postReport" parameterType="hashmap">
MERGE INTO REPORT
USING DUAL
    ON (REPORT_MEMBER_NO = #{sMemNo} AND POST_NO = #{no})
WHEN NOT MATCHED THEN
    INSERT (REPORT_NO, REPORT_TYPE_NO, REPORT_MEMBER_NO, POST_NO, OTHER, TARGET_MN)
    VALUES(REPORT_SEQ.NEXTVAL, #{reportTypeNo}, #{sMemNo}, #{no}, #{reportContents, jdbcType = VARCHAR}, #{reportNm})
</insert>
</mapper>