<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adNotice">

	<!-- 페이징 -->
	<select id="cnt" parameterType="hashmap" resultType="integer">
		SELECT COUNT(*) AS CNT
		FROM NOTICE
		WHERE DEL_DT IS NULL
		<if test="searchTxt != null and searchTxt !='' ">
			<choose>
				<when test="searchGbn == 0">
					AND TITLE LIKE '%' || #{searchTxt} || '%'
				</when>
				<when test="searchGbn == 1">
					AND CONTENTS LIKE '%' || #{searchTxt} || '%'
				</when>
			</choose>
		</if>
		AND MUST_READ_YN = 1
	</select>

	<!-- 디테일 -->
	<select id="detail" parameterType="hashmap" resultType="hashmap">
		SELECT POST_NO, TITLE, CONTENTS, NM, TO_CHAR(N.REG_DT, 'YYYY-MM-DD') AS REG_DT, 
			   HIT, ATT_FILE, MUST_READ_YN	
		FROM NOTICE N INNER JOIN MEMBER M
	              		ON N.MEMBER_NO = M.MEMBER_NO
		WHERE N.DEL_DT IS NULL
		AND N.POST_NO=#{no}
	</select>
	
	<!-- 작성 -->
	<insert id="insert" parameterType="hashmap">
		INSERT INTO NOTICE(POST_NO, TITLE, MEMBER_NO, CONTENTS, ATT_FILE, MUST_READ_YN)
		VALUES(NOTICE_SEQ.NEXTVAL, #{title}, #{memberNo}, #{contents}, #{attFile}, 
			<choose>
				<when test="mainCheck != null and mainCheck != ''">
					0
				</when>
				<otherwise>
					1
				</otherwise>
			</choose>
		)
	</insert>

	<!-- 수정 -->
	<update id="update" parameterType="hashmap">
		UPDATE NOTICE SET TITLE = #{title}, CONTENTS = #{contents}, ATT_FILE=#{att}, 
			   MUST_READ_YN =
			   <choose>
					<when test="mainCheck != null and mainCheck != ''">
						0
					</when>
					<otherwise>
						1
					</otherwise>
				</choose>	
		WHERE POST_NO = #{no}
	</update>

	<!-- 목록에서 체크박스 삭제 -->
	<update id="delete" parameterType="hashmap">
		UPDATE NOTICE SET DEL_DT = SYSDATE
		WHERE POST_NO IN (${delNo})
	</update>
	
	<!-- 디테일에서 삭제버튼 -->
	<update id="detailDelete" parameterType="hashmap" >
		UPDATE NOTICE SET DEL_DT = SYSDATE
		WHERE POST_NO = #{no}
	</update>
	
	<select id="list" parameterType="hashmap" resultType="hashmap" >
		SELECT POST_NO, TITLE, CONTENTS, NM, TO_CHAR(N.REG_DT, 'YYYY-MM-DD') AS REG_DT, ATT_FILE, MUST_READ_YN, RNK
		FROM(SELECT POST_NO, TITLE, CONTENTS, NM, N.REG_DT, ATT_FILE, MUST_READ_YN,
		            ROW_NUMBER()OVER(ORDER BY N.REG_DT DESC) AS RNK 
		     FROM NOTICE N INNER JOIN MEMBER M
		                           ON N.MEMBER_NO = M.MEMBER_NO 
		     WHERE N.DEL_DT IS NULL
		     AND MUST_READ_YN = 0 ) N
		<![CDATA[WHERE RNK <= 3]]>
		UNION ALL         
		SELECT POST_NO, TITLE, CONTENTS, NM, TO_CHAR(N.REG_DT, 'YYYY-MM-DD') AS REG_DT, ATT_FILE, MUST_READ_YN, RNK
		FROM(SELECT POST_NO, TITLE, CONTENTS, NM, N.REG_DT, ATT_FILE, MUST_READ_YN,
					ROW_NUMBER()OVER(ORDER BY N.REG_DT DESC) AS RNK 
			 FROM NOTICE N INNER JOIN MEMBER M
					               ON N.MEMBER_NO = M.MEMBER_NO
			 WHERE N.DEL_DT IS NULL
			 AND MUST_READ_YN = 1 
			 <if test="searchTxt != null and searchTxt !='' ">
				<choose>
					<when test="searchGbn == 0">
						AND TITLE LIKE '%' || #{searchTxt} || '%'
					</when>
					<when test="searchGbn == 1">
						AND CONTENTS LIKE '%' || #{searchTxt} || '%'
					</when>
				</choose>
			</if>
			 ) N
		WHERE RNK BETWEEN #{start} AND #{end}  
	</select>

</mapper>