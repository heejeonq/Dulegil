<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="free">

<!-- 페이지카운트 -->
<select id="getCnt" resultType="integer" parameterType="hashmap">
SELECT COUNT (*) AS CNT
FROM
(SELECT T.BLTNBOARD_NO,POST_NO,MEMBER_NO,TITLE,CONTENTS,IMG_FILE,HIT,REG_DT
FROM BOARD_TYPE T INNER JOIN BULLETIN_BOARD B
ON T.BLTNBOARD_NO = B.BLTNBOARD_NO
WHERE B.DEL_DT IS NULL
AND T.BLTNBOARD_NO =3)G INNER JOIN MEMBER M
ON G.MEMBER_NO=M.MEMBER_NO
<!-- 검색어가 널이 또는 '' 가 아니라면 -->
<if test="searchTxt != null and searchTxt !=''">
	<choose>
		<!-- 구분이 제목일때  #{serchTxt} 들어가묜-->
		<when test="searchGbn eq 0">
		AND TITLE LIKE '%' || #{searchTxt} || '%'
		</when>
		<when test="searchGbn eq 1">
		AND CONTENTS LIKE '%'|| #{searchTxt}||'%'
		</when>
		<when test="searchGbn eq 2">
		AND NM LIKE '%'|| #{searchTxt} ||'%'
		</when>
	</choose>		
</if>	

</select>

<!-- 목록 -->
<select id="getFreeList" parameterType="hashmap" resultType="hashmap">	
SELECT F.POST_NO,F.NM,F.TITLE,F.HIT,F.DT,F.CONTENTS,F.IMG_FILE,F.IMG_FILE,NVL(F.CNT,0)AS CNT
FROM(SELECT G.POST_NO,M.NM,G.TITLE,G.HIT,G.DT,G.CONTENTS,G.RNUM,G.IMG_FILE,CC.CNT
     FROM (SELECT POST_NO,TITLE,HIT,CONTENTS,MEMBER_NO,B.IMG_FILE,
                CASE WHEN TO_CHAR(B.REG_DT, 'YY.MM.DD') = TO_CHAR(SYSDATE,'YY.MM.DD')
            	THEN TO_CHAR(B.REG_DT, 'HH24:MI')
            	ELSE TO_CHAR(B.REG_DT,'YY.MM.DD')
       			END AS DT,
                ROW_NUMBER() OVER(ORDER BY B.POST_NO DESC) AS RNUM  
                FROM BOARD_TYPE T INNER JOIN BULLETIN_BOARD B
                ON T.BLTNBOARD_NO = B.BLTNBOARD_NO                
                WHERE B.DEL_DT IS NULL
                AND T.BLTNBOARD_NO =3 )G  
        INNER JOIN MEMBER M 
        ON G.MEMBER_NO = M.MEMBER_NO
        LEFT OUTER JOIN(SELECT COUNT(*)AS CNT,POST_NO
                        FROM COMMENTS
                        WHERE DEL_DT IS NULL
                        GROUP BY POST_NO)
                     CC ON G.POST_NO=CC.POST_NO
                     WHERE 1=1
            <if test="searchTxt != null and searchTxt !=''">
				<choose>
					<!-- 구분이 제목일때  #{serchTxt} 들어가묜-->
					<when test="searchGbn eq 0">
					AND TITLE LIKE '%' || #{searchTxt} || '%'
					</when>
					<when test="searchGbn eq 1">
					AND CONTENTS LIKE '%'|| #{searchTxt}||'%'
					</when>
					<when test="searchGbn eq 2">
					AND NM LIKE '%'|| #{searchTxt} ||'%'
					</when>
				</choose>		
			</if>
        )F
        WHERE F.RNUM BETWEEN #{start} AND #{end}
    
</select>

<!-- 게시글등록 -->
<insert id="insert" parameterType="hashmap">
INSERT INTO BULLETIN_BOARD (POST_NO,BLTNBOARD_NO,MEMBER_NO,TITLE,CONTENTS,REG_DT,IMG_FILE)
VALUES (COMMUNITY_SEQ.NEXTVAL,3,#{memberNo},#{title},#{contents},SYSDATE,#{imgFile})
</insert>


<!-- 게시글 삭제 -->
<update id="delete" parameterType="hashmap">
UPDATE BULLETIN_BOARD SET DEL_DT = SYSDATE
WHERE POST_NO= #{no}
</update>

<!-- 게시글 수정 -->
<update id="update"  parameterType="hashmap">
UPDATE BULLETIN_BOARD SET TITLE=#{title}, CONTENTS=#{contents}, IMG_FILE=#{imgFile}
WHERE POST_NO=#{no}
</update>

<!-- 조회수 -->
<update id="updateTHit" parameterType="hashmap">
UPDATE BULLETIN_BOARD SET HIT = HIT+1
WHERE BLTNBOARD_NO =3
AND POST_NO= #{no} 
<if test="sMemNo != null and sMemNo != ''">
	AND MEMBER_NO != #{sMemNo}
</if> 
</update>

<!-- 상세보기 -->
<select id="getF" parameterType="hashmap" resultType="hashmap">
SELECT F.POST_NO,F.BLTNBOARD_NO,F.MEMBER_NO,F.NM,F.TITLE,F.HIT,F.DT,F.CONTENTS, B_IMG, M_IMG
FROM (SELECT G.POST_NO,G.BLTNBOARD_NO,G.MEMBER_NO,M.NM,G.TITLE,G.HIT,G.DT,G.CONTENTS,G.IMG_FILE AS B_IMG,M.IMG_FILE AS M_IMG
     FROM (SELECT POST_NO,TITLE,HIT,CONTENTS,MEMBER_NO,B.BLTNBOARD_NO,B.IMG_FILE,REG_DT,DEL_DT,
                CASE WHEN TO_CHAR(B.REG_DT, 'YY.MM.DD') = TO_CHAR(SYSDATE,'YY.MM.DD')
               THEN TO_CHAR(B.REG_DT, 'HH24:MI')
               ELSE TO_CHAR(B.REG_DT,'YY.MM.DD')
                END AS DT,
                ROW_NUMBER() OVER(ORDER BY B.POST_NO DESC) AS RNUM  
            FROM BOARD_TYPE T INNER JOIN BULLETIN_BOARD B
                ON T.BLTNBOARD_NO = B.BLTNBOARD_NO
                WHERE B.DEL_DT IS NULL
                 AND T.BLTNBOARD_NO =3 )G  
        INNER JOIN MEMBER M 
        ON G.MEMBER_NO = M.MEMBER_NO
     )F
      WHERE F.POST_NO=#{no}
</select>
<!-- 댓글 카운트 -->
<select id="getCCnt" resultType="integer" parameterType="hashmap">
SELECT COUNT(*)AS CNT
FROM COMMENTS C INNER JOIN MEMBER M
     ON C.MEMBER_NO=M.MEMBER_NO
     AND C.DEL_DT IS NULL
     AND M.DEL_DT IS NULL
     WHERE POST_NO=#{no}
</select>

<!-- 댓글리스트 -->
<select id="getCList"  parameterType="hashmap" resultType="hashmap">
 SELECT F.COMMENT_NO,F.POST_NO,F.CCONTENTS,F.CREG_DT,F.CMEMBER_NO,F.CNM,F.P_IMG,F.RCNUM
FROM (SELECT COMMENT_NO,POST_NO,C.CONTENTS AS CCONTENTS,
     CASE WHEN TO_CHAR(C.REG_DT, 'YY.MM.DD') = TO_CHAR(SYSDATE,'YY.MM.DD')
				THEN TO_CHAR(C.REG_DT, 'HH24:MI')
				ELSE TO_CHAR(C.REG_DT, 'YY.MM.DD')
                END AS CREG_DT,
     M.MEMBER_NO AS CMEMBER_NO,M.NM AS CNM,M.IMG_FILE AS P_IMG,     
     ROW_NUMBER() OVER(ORDER BY COMMENT_NO DESC) AS RCNUM
FROM COMMENTS C INNER JOIN MEMBER M
     ON C.MEMBER_NO=M.MEMBER_NO
     AND C.DEL_DT IS NULL
     AND M.DEL_DT IS NULL
     WHERE POST_NO=#{no})F
   WHERE F.RCNUM &lt;= #{end} 
</select>

<!-- 댓글추가 -->
<insert id="insertC" parameterType="hashmap">		
INSERT INTO COMMENTS(COMMENT_NO,POST_NO,MEMBER_NO,CONTENTS,REG_DT)
VALUES (COMMENT_SEQ.NEXTVAL,#{no},#{cmemberNo},#{ccon},SYSDATE)
</insert>

<!-- 댓글수정 -->
<update id="updateC" parameterType="hashmap">
UPDATE COMMENTS SET CONTENTS = #{ccon}
WHERE COMMENT_NO = #{commentNo}
</update>

<!-- 댓글삭제 -->
<delete id="deleteC" parameterType="hashmap">
UPDATE COMMENTS SET DEL_DT = SYSDATE
WHERE COMMENT_NO =#{commentNo}
</delete>
<insert id="commentReport" parameterType="hashmap">
MERGE INTO REPORT
USING DUAL
    ON (REPORT_MEMBER_NO = #{sMemNo} AND COMMENT_NO = #{commentNo})
WHEN NOT MATCHED THEN
    INSERT (REPORT_NO, REPORT_TYPE_NO, REPORT_MEMBER_NO, COMMENT_NO, OTHER, TARGET_MN)
    VALUES(REPORT_SEQ.NEXTVAL, #{reportTypeNo}, #{sMemNo}, #{commentNo}, #{reportContents, jdbcType = VARCHAR}, #{reportNm})
</insert>
<!-- 게시글 신고하기 -->
<insert id="postReport" parameterType="hashmap">
MERGE INTO REPORT
USING DUAL
    ON (REPORT_MEMBER_NO = #{sMemNo} AND POST_NO = #{no})
WHEN NOT MATCHED THEN
    INSERT (REPORT_NO, REPORT_TYPE_NO, REPORT_MEMBER_NO, POST_NO, OTHER, TARGET_MN)
    VALUES(REPORT_SEQ.NEXTVAL, #{reportTypeNo}, #{sMemNo}, #{no}, #{reportContents, jdbcType = VARCHAR}, #{reportNm})
</insert>



</mapper>