<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adMember">
	<!-- 목록 -->
	<select id="list" resultType="hashmap">
		SELECT MEMBER_NO, AUTHORITY_NM, NM, EMAIL
		FROM (SELECT M.MEMBER_NO, A.AUTHORITY_NO, AUTHORITY_NM, NM, EMAIL, 
		             ROW_NUMBER()OVER(ORDER BY M.MEMBER_NO ASC) AS RNK
		      FROM MEMBER M INNER JOIN AUTHORITY A 
		                            ON M.AUTHORITY_NO = A.AUTHORITY_NO
		      WHERE M.DEL_DT IS NULL 
		      AND A.AUTHORITY_NO IN (2, 3)
				<choose>
					<when test="cate != 0" >
						AND A.AUTHORITY_NO = #{cate}	
					</when>
					<otherwise>
					</otherwise>
				</choose>
				<if test="searchTxt != null and searchTxt != ''">
				<choose>
					<when test="searchGbn == 0">
						AND MEMBER_NO LIKE '%' || #{searchTxt} || '%'
					</when>
					<when test="searchGbn == 1">
						AND NM LIKE '%' || #{searchTxt} || '%'		
					</when>
					<when test="searchGbn == 2">
						AND EMAIL LIKE '%' || #{searchTxt} || '%'
					</when>
				</choose>
			</if> 
			) AM
		WHERE RNK BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 페이징 -->
	<select id="cnt" parameterType="hashmap" resultType="integer">	
		SELECT COUNT(*) AS CNT
		FROM MEMBER
		WHERE DEL_DT IS NULL 
		<choose>
			<when test="cate != 0" >
				AND AUTHORITY_NO = #{cate}	
			</when>
			<otherwise>
				AND AUTHORITY_NO IN (2, 3)
			</otherwise>
		</choose>
		<if test="searchTxt != null and searchTxt != ''">
			<choose>
				<when test="searchGbn == 0">
						AND MEMBER_NO LIKE '%' || #{searchTxt} || '%'
					</when>
					<when test="searchGbn == 1">
						AND NM LIKE '%' || #{searchTxt} || '%'		
					</when>
					<when test="searchGbn == 2">
						AND EMAIL LIKE '%' || #{searchTxt} || '%'
					</when>
			</choose>
		</if> 
	</select>
		
	<!-- 수정 -->
	<update id ="update" parameterType="hashmap">
		UPDATE MEMBER SET AUTHORITY_NO = #{aut}, NM = #{nm}, PWD = #{pwd}, PHONE_NO = #{phn}, 
                          DATE_BIRTH = #{dtBrt}
                          <if test="gen !='' ">
                          , GENDER = #{gen}
                          </if>
                          , ZIP_CODE = #{zcd}, 
                          ADDRESS = #{adr}, DETAIL_ADDRESS = #{adrDtl}
		WHERE MEMBER_NO = #{updNo}
	</update>
	
	<select id="category" resultType="hashmap">
		SELECT AUTHORITY_NO, AUTHORITY_NM	
		FROM AUTHORITY
		WHERE AUTHORITY_NO IN (2, 3)
	</select>
	
	<select id="commonCategory" resultType="hashmap">
		SELECT SMALL_CATEGORY, CODE_NM
		FROM COMMON_CODE
		WHERE LARGE_CATEGORY = 2
	</select>
	
	<select id="info" resultType="hashmap">
		SELECT MEMBER_NO, AUTHORITY_NO, AUTHORITY_NM, NM, PWD, EMAIL, PHONE_NO, TO_CHAR(DATE_BIRTH, 'YYYY-MM-DD') AS DATE_BIRTH, 
		       SMALL_CATEGORY, CODE_NM, ADDRESS, ZIP_CODE, DETAIL_ADDRESS,
		       RELIABILITY, NVL(CNT, '0') AS CNT, IMG_FILE
		FROM (SELECT M.MEMBER_NO, A.AUTHORITY_NO, AUTHORITY_NM, NM, PWD, EMAIL, PHONE_NO, DATE_BIRTH, 
					 SMALL_CATEGORY, CODE_NM, IMG_FILE, ZIP_CODE, ADDRESS, DETAIL_ADDRESS, RELIABILITY, CNT
		      FROM MEMBER M INNER JOIN AUTHORITY A 
		                            ON M.AUTHORITY_NO = A.AUTHORITY_NO
		               LEFT OUTER JOIN COMMON_CODE C
		                            ON M.GENDER = C.SMALL_CATEGORY
		                           AND C.LARGE_CATEGORY = 2
		               LEFT OUTER JOIN (SELECT COUNT(*) AS CNT, TARGET_REPORT_MEMBER_NO
		                                FROM REPORT
		                                GROUP BY TARGET_REPORT_MEMBER_NO) R
		                            ON R.TARGET_REPORT_MEMBER_NO = M.MEMBER_NO
		      WHERE M.DEL_DT IS NULL 
		      AND A.AUTHORITY_NO IN (2, 3) )AM
		WHERE MEMBER_NO = #{no}
	</select>
</mapper>